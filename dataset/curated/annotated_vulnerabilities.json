[{
    "name": "token.sol",
    "path": "dataset/curated/integer_overflows/token.sol",
    "source": "https://github.com/sigp/solidity-security-blog",
    "vulnerabilities": [{
        "lines": [20],
        "category": "integer_overflows"
    }, {
        "lines": [22],
        "category": "integer_overflows"
    }]
}, {
    "name": "overflow_single_tx.sol",
    "path": "dataset/curated/integer_overflows/overflow_single_tx.sol",
    "source": "https://github.com/ConsenSys/evm-analyzer-benchmark-suite",
    "vulnerabilities": [{
        "lines": [18],
        "category": "integer_overflows"
    }, {
        "lines": [24],
        "category": "integer_overflows"
    }, {
        "lines": [30],
        "category": "integer_overflows"
    }, {
        "lines": [36],
        "category": "integer_overflows"
    }, {
        "lines": [42],
        "category": "integer_overflows"
    }, {
        "lines": [48],
        "category": "integer_overflows"
    }]
}, {
    "name": "integer_overflow_minimal.sol",
    "path": "dataset/curated/integer_overflows/integer_overflow_minimal.sol",
    "source": "https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/integer_overflow_and_underflow/integer_overflow_minimal.sol",
    "vulnerabilities": [{
        "lines": [17],
        "category": "integer_overflows"
    }]
}, {
    "name": "integer_overflow_add.sol",
    "path": "dataset/curated/integer_overflows/integer_overflow_add.sol",
    "source": "https://github.com/ConsenSys/evm-analyzer-benchmark-suite/blob/master/benchmarks/integer_overflow_add.sol",
    "vulnerabilities": [{
        "lines": [17],
        "category": "integer_overflows"
    }]
}, {
    "name": "insecure_transfer.sol",
    "path": "dataset/curated/integer_overflows/insecure_transfer.sol",
    "source": "https://consensys.github.io/smart-contract-best-practices/known_attacks/#front-running-aka-transaction-ordering-dependence",
    "vulnerabilities": [{
        "lines": [18],
        "category": "integer_overflows"
    }]
}, {
    "name": "integer_overflow_benign_1.sol",
    "path": "dataset/curated/integer_overflows/integer_overflow_benign_1.sol",
    "source": "https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/integer_overflow_and_underflow/integer_overflow_benign_1.sol",
    "vulnerabilities": [{
        "lines": [17],
        "category": "integer_overflows"
    }]
}, {
    "name": "timelock.sol",
    "path": "dataset/curated/integer_overflows/timelock.sol",
    "source": "https://github.com/sigp/solidity-security-blog",
    "vulnerabilities": [{
        "lines": [22],
        "category": "integer_overflows"
    }]
}, {
    "name": "integer_overflow_1.sol",
    "path": "dataset/curated/integer_overflows/integer_overflow_1.sol",
    "source": "https://github.com/trailofbits/not-so-smart-contracts/blob/master/integer_overflow/integer_overflow_1.sol",
    "vulnerabilities": [{
        "lines": [14],
        "category": "integer_overflows"
    }]
}, {
    "name": "integer_overflow_mapping_sym_1.sol",
    "path": "dataset/curated/integer_overflows/integer_overflow_mapping_sym_1.sol",
    "source": "https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/integer_overflow_and_underflow/integer_overflow_mapping_sym_1.sol",
    "vulnerabilities": [{
        "lines": [16],
        "category": "integer_overflows"
    }]
}, {
    "name": "overflow_simple_add.sol",
    "path": "dataset/curated/integer_overflows/overflow_simple_add.sol",
    "source": "https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#overflow-simple-addsol",
    "vulnerabilities": [{
        "lines": [14],
        "category": "integer_overflows"
    }]
}, {
    "name": "integer_overflow_mul.sol",
    "path": "dataset/curated/integer_overflows/integer_overflow_mul.sol",
    "source": "https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/integer_overflow_and_underflow/integer_overflow_mul.sol",
    "vulnerabilities": [{
        "lines": [17],
        "category": "integer_overflows"
    }]
}, {
    "name": "tokensalechallenge.sol",
    "path": "dataset/curated/integer_overflows/tokensalechallenge.sol",
    "source": "https://swcregistry.io/docs/SWC-105#tokensalechallengesol // https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101 // https://capturetheether.com/challenges/math/token-sale/",
    "vulnerabilities": [{
        "lines": [21],
        "category": "integer_overflows"
    }, {
        "lines": [23],
        "category": "integer_overflows"
    }, {
        "lines": [30],
        "category": "integer_overflows"
    }, {
        "lines": [30],
        "category": "leaking_ether"
    }]
}, {
    "name": "integer_overflow_multitx_multifunc_feasible.sol",
    "path": "dataset/curated/integer_overflows/integer_overflow_multitx_multifunc_feasible.sol",
    "source": "https://github.com/ConsenSys/evm-analyzer-benchmark-suite",
    "vulnerabilities": [{
        "lines": [25],
        "category": "integer_overflows"
    }]
}, {
    "name": "BECToken.sol",
    "path": "dataset/curated/integer_overflows/BECToken.sol",
    "source": "https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-101#bectokensol",
    "description": "'BECToken: Integer overflow in batchTransfer function'",
    "vulnerabilities": [{
        "lines": [264],
        "category": "integer_overflows"
    }]
}, {
    "name": "integer_overflow_multitx_onefunc_feasible.sol",
    "path": "dataset/curated/integer_overflows/integer_overflow_multitx_onefunc_feasible.sol",
    "source": "https://github.com/ConsenSys/evm-analyzer-benchmark-suite",
    "vulnerabilities": [{
        "lines": [22],
        "category": "integer_overflows"
    }]
}, {
    "name": "0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol",
    "path": "dataset/curated/unhandled_exception/0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [14],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol",
    "path": "dataset/curated/unhandled_exception/0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [45],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol",
    "path": "dataset/curated/unhandled_exception/0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [44],
        "category": "unhandled_exception"
    }, {
        "lines": [97],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x4051334adc52057aca763453820cb0e045076ef3.sol",
    "path": "dataset/curated/unhandled_exception/0x4051334adc52057aca763453820cb0e045076ef3.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [16],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol",
    "path": "dataset/curated/unhandled_exception/0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [198],
        "category": "unhandled_exception"
    }, {
        "lines": [210],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x0cbe050f75bc8f8c2d6c0d249fea125fd6e1acc9.sol",
    "path": "dataset/curated/unhandled_exception/0x0cbe050f75bc8f8c2d6c0d249fea125fd6e1acc9.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [12],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol",
    "path": "dataset/curated/unhandled_exception/0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [16],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol",
    "path": "dataset/curated/unhandled_exception/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [27],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol",
    "path": "dataset/curated/unhandled_exception/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [94],
        "category": "reentrancy"
    }]
}, {
    "name": "0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol",
    "path": "dataset/curated/unhandled_exception/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [44],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol",
    "path": "dataset/curated/unhandled_exception/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [29],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol",
    "path": "dataset/curated/unhandled_exception/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [439],
        "category": "unhandled_exception"
    }, {
        "lines": [465],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol",
    "path": "dataset/curated/unhandled_exception/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [17],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol",
    "path": "dataset/curated/unhandled_exception/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [150],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol",
    "path": "dataset/curated/unhandled_exception/0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [56],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x524960d55174d912768678d8c606b4d50b79d7b1.sol",
    "path": "dataset/curated/unhandled_exception/0x524960d55174d912768678d8c606b4d50b79d7b1.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [21],
        "category": "unhandled_exception"
    }]
}, {
    "name": "etherpot_lotto.sol",
    "path": "dataset/curated/unhandled_exception/etherpot_lotto.sol",
    "source": "https://github.com/etherpot/contract/blob/master/app/contracts/lotto.sol",
    "vulnerabilities": [{
        "lines": [109],
        "category": "unhandled_exception"
    }, {
        "lines": [141],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol",
    "path": "dataset/curated/unhandled_exception/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [201],
        "category": "unhandled_exception"
    }, {
        "lines": [213],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol",
    "path": "dataset/curated/unhandled_exception/0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [44],
        "category": "unhandled_exception"
    }, {
        "lines": [97],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol",
    "path": "dataset/curated/unhandled_exception/0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [100],
        "category": "unhandled_exception"
    }, {
        "lines": [106],
        "category": "unhandled_exception"
    }, {
        "lines": [133],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol",
    "path": "dataset/curated/unhandled_exception/0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [39],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol",
    "path": "dataset/curated/unhandled_exception/0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [14],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol",
    "path": "dataset/curated/unhandled_exception/0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [16],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol",
    "path": "dataset/curated/unhandled_exception/0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [39],
        "category": "unhandled_exception"
    }]
}, {
    "name": "lotto.sol",
    "path": "dataset/curated/unhandled_exception/lotto.sol",
    "source": "https://github.com/sigp/solidity-security-blog",
    "vulnerabilities": [{
        "lines": [20],
        "category": "unhandled_exception"
    }, {
        "lines": [27],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol",
    "path": "dataset/curated/unhandled_exception/0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [29],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol",
    "path": "dataset/curated/unhandled_exception/0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [19],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol",
    "path": "dataset/curated/unhandled_exception/0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [55],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x39cfd754c85023648bf003bea2dd498c5612abfa.sol",
    "path": "dataset/curated/unhandled_exception/0x39cfd754c85023648bf003bea2dd498c5612abfa.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [44],
        "category": "unhandled_exception"
    }, {
        "lines": [97],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xf29ebe930a539a60279ace72c707cba851a57707.sol",
    "path": "dataset/curated/unhandled_exception/0xf29ebe930a539a60279ace72c707cba851a57707.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [16],
        "category": "unhandled_exception"
    }]
}, {
    "name": "mishandled.sol",
    "path": "dataset/curated/unhandled_exception/mishandled.sol",
    "source": "https://github.com/seresistvanandras/EthBench/blob/master/Benchmark/Simple/mishandled.sol",
    "vulnerabilities": [{
        "lines": [14],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x89c1b3807d4c67df034fffb62f3509561218d30b.sol",
    "path": "dataset/curated/unhandled_exception/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [162],
        "category": "unhandled_exception"
    }, {
        "lines": [175],
        "category": "unhandled_exception"
    }, {
        "lines": [180],
        "category": "unhandled_exception"
    }, {
        "lines": [192],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol",
    "path": "dataset/curated/unhandled_exception/0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [14],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xbaa3de6504690efb064420d89e871c27065cdd52.sol",
    "path": "dataset/curated/unhandled_exception/0xbaa3de6504690efb064420d89e871c27065cdd52.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [14],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol",
    "path": "dataset/curated/unhandled_exception/0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [29],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol",
    "path": "dataset/curated/unhandled_exception/0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [45],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol",
    "path": "dataset/curated/unhandled_exception/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [33],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol",
    "path": "dataset/curated/unhandled_exception/0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [44],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol",
    "path": "dataset/curated/unhandled_exception/0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [33],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol",
    "path": "dataset/curated/unhandled_exception/0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [44],
        "category": "unhandled_exception"
    }]
}, {
    "name": "king_of_the_ether_throne.sol",
    "path": "dataset/curated/unhandled_exception/king_of_the_ether_throne.sol",
    "source": "https://github.com/kieranelby/KingOfTheEtherThrone/blob/v0.4.0/contracts/KingOfTheEtherThrone.sol",
    "vulnerabilities": [{
        "lines": [110],
        "category": "unhandled_exception"
    }, {
        "lines": [118],
        "category": "unhandled_exception"
    }, {
        "lines": [132],
        "category": "unhandled_exception"
    }, {
        "lines": [174],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol",
    "path": "dataset/curated/unhandled_exception/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [69],
        "category": "unhandled_exception"
    }, {
        "lines": [71],
        "category": "unhandled_exception"
    }, {
        "lines": [73],
        "category": "unhandled_exception"
    }, {
        "lines": [75],
        "category": "unhandled_exception"
    }, {
        "lines": [102],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x663e4229142a27f00bafb5d087e1e730648314c3.sol",
    "path": "dataset/curated/unhandled_exception/0x663e4229142a27f00bafb5d087e1e730648314c3.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [1152],
        "category": "unhandled_exception"
    }, {
        "lines": [1496],
        "category": "unhandled_exception"
    }, {
        "lines": [2467],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol",
    "path": "dataset/curated/unhandled_exception/0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [45],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol",
    "path": "dataset/curated/unhandled_exception/0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [25],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xec329ffc97d75fe03428ae155fc7793431487f63.sol",
    "path": "dataset/curated/unhandled_exception/0xec329ffc97d75fe03428ae155fc7793431487f63.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [30],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xf2570186500a46986f3139f65afedc2afe4f445d.sol",
    "path": "dataset/curated/unhandled_exception/0xf2570186500a46986f3139f65afedc2afe4f445d.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [18],
        "category": "unhandled_exception"
    }]
}, {
    "name": "unchecked_return_value.sol",
    "path": "dataset/curated/unhandled_exception/unchecked_return_value.sol",
    "source": "https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-104#unchecked-return-valuesol",
    "vulnerabilities": [{
        "lines": [17],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol",
    "path": "dataset/curated/unhandled_exception/0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [44],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xa1fceeff3acc57d257b917e30c4df661401d6431.sol",
    "path": "dataset/curated/unhandled_exception/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [31],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol",
    "path": "dataset/curated/unhandled_exception/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [54],
        "category": "unhandled_exception"
    }, {
        "lines": [65],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0xe894d54dca59cb53fe9cbc5155093605c7068220.sol",
    "path": "dataset/curated/unhandled_exception/0xe894d54dca59cb53fe9cbc5155093605c7068220.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [17],
        "category": "unhandled_exception"
    }]
}, {
    "name": "0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol",
    "path": "dataset/curated/unhandled_exception/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol",
    "source": "etherscan.io",
    "vulnerabilities": [{
        "lines": [44],
        "category": "unhandled_exception"
    }]
}, {
    "name": "PrivateBank.sol",
    "path": "dataset/curated/reentrancy/PrivateBank.sol",
    "source": "https://github.com/SoftSec-KAIST/Smartian/blob/main/examples/sol/RE.sol",
    "vulnerabilities": [{
        "lines": [23],
        "category": "reentrancy"
    }]
}, {
    "name": "reentrancy_bonus.sol",
    "path": "dataset/curated/reentrancy/reentrancy_bonus.sol",
    "source": "https://consensys.github.io/smart-contract-best-practices/known_attacks/",
    "vulnerabilities": [{
        "lines": [28],
        "category": "reentrancy"
    }]
}, {
    "name": "reentrance.sol",
    "path": "dataset/curated/reentrancy/reentrance.sol",
    "source": "https://ethernaut.zeppelin.solutions/level/0xf70706db003e94cfe4b5e27ffd891d5c81b39488",
    "vulnerabilities": [{
        "lines": [24],
        "category": "reentrancy"
    }]
}, {
    "name": "reentrancy_dao.sol",
    "path": "dataset/curated/reentrancy/reentrancy_dao.sol",
    "source": "https://github.com/ConsenSys/evm-analyzer-benchmark-suite",
    "vulnerabilities": [{
        "lines": [18],
        "category": "reentrancy"
    }]
}, {
    "name": "modifier_reentrancy.sol",
    "path": "dataset/curated/reentrancy/modifier_reentrancy.sol",
    "source": "https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/reentracy/modifier_reentrancy.sol",
    "vulnerabilities": [{
        "lines": [15],
        "category": "reentrancy"
    }]
}, {
    "name": "reentrancy_cross_function.sol",
    "path": "dataset/curated/reentrancy/reentrancy_cross_function.sol",
    "source": "https://consensys.github.io/smart-contract-best-practices/known_attacks/",
    "vulnerabilities": [{
        "lines": [24],
        "category": "reentrancy"
    }]
}, {
    "name": "reentrancy_simple.sol",
    "path": "dataset/curated/reentrancy/reentrancy_simple.sol",
    "source": "https://github.com/trailofbits/not-so-smart-contracts/blob/master/reentrancy/Reentrancy.sol",
    "vulnerabilities": [{
        "lines": [24],
        "category": "reentrancy"
    }]
}, {
    "name": "etherstore.sol",
    "path": "dataset/curated/reentrancy/etherstore.sol",
    "source": "https://github.com/sigp/solidity-security-blog",
    "vulnerabilities": [{
        "lines": [27],
        "category": "reentrancy"
    }]
}, {
    "name": "spank_chain_payment.sol",
    "path": "dataset/curated/reentrancy/spank_chain_payment.sol",
    "source": "https://github.com/trailofbits/not-so-smart-contracts/blob/master/reentrancy/SpankChain_source_code/SpankChain_Payment.sol",
    "vulnerabilities": [{
        "lines": [426],
        "category": "reentrancy"
    }, {
        "lines": [430],
        "category": "reentrancy"
    }]
}, {
    "name": "reentrancy_insecure.sol",
    "path": "dataset/curated/reentrancy/reentrancy_insecure.sol",
    "source": "https://consensys.github.io/smart-contract-best-practices/known_attacks/",
    "vulnerabilities": [{
        "lines": [17],
        "category": "reentrancy"
    }]
}, {
    "name": "etherbank.sol",
    "path": "dataset/curated/reentrancy/etherbank.sol",
    "source": "https://github.com/seresistvanandras/EthBench/blob/master/Benchmark/Simple/reentrant.sol",
    "vulnerabilities": [{
        "lines": [21],
        "category": "reentrancy"
    }]
}, {
    "name": "simple_dao.sol",
    "path": "dataset/curated/reentrancy/simple_dao.sol",
    "source": "http://blockchain.unica.it/projects/ethereum-survey/attacks.html#simpledao",
    "vulnerabilities": [{
        "lines": [19],
        "category": "reentrancy"
    }]
}, {
    "name": "ERC20.sol",
    "path": "dataset/curated/transaction_order_dependency/ERC20.sol",
    "source": "https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/transaction_order_dependence/ERC20.sol",
    "vulnerabilities": [{
        "lines": [110],
        "category": "transaction_order_dependency"
    }, {
        "lines": [113],
        "category": "transaction_order_dependency"
    }]
}, {
    "name": "FindThisHash.sol",
    "path": "dataset/curated/transaction_order_dependency/FindThisHash.sol",
    "source": "https://github.com/sigp/solidity-security-blog",
    "vulnerabilities": [{
        "lines": [17],
        "category": "transaction_order_dependency"
    }]
}, {
    "name": "eth_tx_order_dependence_minimal.sol",
    "path": "dataset/curated/transaction_order_dependency/eth_tx_order_dependence_minimal.sol",
    "source": "https://github.com/ConsenSys/evm-analyzer-benchmark-suite",
    "vulnerabilities": [{
        "lines": [23],
        "category": "transaction_order_dependency"
    }, {
        "lines": [31],
        "category": "transaction_order_dependency"
    }]
}, {
    "name": "odds_and_evens.sol",
    "path": "dataset/curated/transaction_order_dependency/odds_and_evens.sol",
    "source": "http://blockchain.unica.it/projects/ethereum-survey/attacks.html#oddsandevens",
    "vulnerabilities": [{
        "lines": [25],
        "category": "transaction_order_dependency"
    }, {
        "lines": [28],
        "category": "transaction_order_dependency"
    }]
}, {
    "name": "simple_suicide.sol",
    "path": "dataset/curated/unprotected_selfdestruct/simple_suicide.sol",
    "source": "https://swcregistry.io/docs/SWC-106#simple_suicidesol",
    "description": "Trivially killable contract",
    "vulnerabilities": [{
        "lines": [6],
        "category": "unprotected_selfdestruct"
    }]
}, {
    "name": "KAI.sol",
    "path": "dataset/curated/unprotected_selfdestruct/KAI.sol",
    "source": "https://github.com/SoftSec-KAIST/Smartian/blob/main/examples/sol/SC.sol",
    "vulnerabilities": [{
        "lines": [139],
        "category": "unprotected_selfdestruct"
    }]
}, {
    "name": "suicide_multitx_feasible.sol",
    "path": "dataset/curated/unprotected_selfdestruct/suicide_multitx_feasible.sol",
    "source": "https://swcregistry.io/docs/SWC-106#suicide_multitx_feasiblesol",
    "description": "Contract can be killed with 2 transactions",
    "vulnerabilities": [{
        "lines": [16],
        "category": "unprotected_selfdestruct"
    }]
}, {
    "name": "WalletLibrary.sol",
    "path": "dataset/curated/unprotected_selfdestruct/WalletLibrary.sol",
    "source": "https://swcregistry.io/docs/SWC-106#walletlibrarysol",
    "description": "Parity Walletlibrary 'accidential suicide'",
    "vulnerabilities": [{
        "lines": [225, 226],
        "category": "unprotected_selfdestruct"
    }]
}, {
    "name": "multiowned_vulnerable.sol",
    "path": "dataset/curated/leaking_ether/multiowned_vulnerable.sol",
    "source": "https://swcregistry.io/docs/SWC-105#multiowned_vulnerablesol",
    "description": "Ether withdrawal function and correclty named constructor (not vulnerable)",
    "vulnerabilities": [{
        "lines": [50],
        "category": "leaking_ether"
    }]
}, {
    "name": "wallet_03_wrong_constructor.sol",
    "path": "dataset/curated/leaking_ether/wallet_03_wrong_constructor.sol",
    "source": "https://swcregistry.io/docs/SWC-105#wallet_03_wrong_constructorsol // https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-105#wallet-03-wrong-constructorsol",
    "description": "Attacker can become 'creator' by calling initWallet() and withdraw all funds",
    "vulnerabilities": [{
        "lines": [31],
        "category": "leaking_ether"
    }]
}, {
    "name": "wallet_04_confused_sign.sol",
    "path": "dataset/curated/leaking_ether/wallet_04_confused_sign.sol",
    "source": "https://swcregistry.io/docs/SWC-105#wallet_04_confused_signsol // https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-105#wallet-04-confused-signsol",
    "description": "Attacker can withdraw unlimited funds due erroneous comparison operator in withdraw function",
    "vulnerabilities": [{
        "lines": [24],
        "category": "leaking_ether"
    }]
}, {
    "name": "HelpMeSave.sol",
    "path": "dataset/curated/leaking_ether/HelpMeSave.sol",
    "source": "https://github.com/SoftSec-KAIST/Smartian/blob/main/examples/sol/ME_true.sol",
    "vulnerabilities": [{
        "lines": [24],
        "category": "leaking_ether"
    }, {
        "lines": [24],
        "category": "unhandled_exception"
    }]
}, {
    "name": "rubixi.sol",
    "path": "dataset/curated/leaking_ether/rubixi.sol",
    "source": "https://swcregistry.io/docs/SWC-105#rubixisol",
    "description": "'Rubixi: Ether can be drained in 2 transactions'",
    "vulnerabilities": [{
        "lines": [77],
        "category": "leaking_ether"
    }, {
        "lines": [87],
        "category": "leaking_ether"
    }, {
        "lines": [95],
        "category": "leaking_ether"
    }]
}, {
    "name": "simple_ether_drain.sol",
    "path": "dataset/curated/leaking_ether/simple_ether_drain.sol",
    "source": "https://swcregistry.io/docs/SWC-105#simple_ether_drainsol",
    "description": "Anybody can withdraw all Ether from the contract account",
    "vulnerabilities": [{
        "lines": [6],
        "category": "leaking_ether"
    }]
}, {
    "name": "wallet_02_refund_nosub.sol",
    "path": "dataset/curated/leaking_ether/wallet_02_refund_nosub.sol",
    "source": "https://swcregistry.io/docs/SWC-105#wallet_02_refund_nosubsol // https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-105#wallet-02-refund-nosubsol",
    "description": "Attacker can pay in a small amount of Ether and call refund() repeatedly to empty the contract,",
    "vulnerabilities": [{
        "lines": [29],
        "category": "leaking_ether"
    }]
}, {
    "name": "ether_lotto.sol",
    "path": "dataset/curated/block_dependency/ether_lotto.sol",
    "source": "https://etherscan.io/address/0xa11e4ed59dc94e69612f3111942626ed513cb172#code",
    "vulnerabilities": [{
        "lines": [43],
        "category": "block_dependency"
    }]
}, {
    "name": "AMBROSUSFund.sol",
    "path": "dataset/curated/block_dependency/AMBROSUSFund.sol",
    "source": "https://github.com/SoftSec-KAIST/Smartian/blob/main/examples/sol/BD_true1.sol",
    "vulnerabilities": [{
        "lines": [89],
        "category": "block_dependency"
    }]
}, {
    "name": "EthCapsule.sol",
    "path": "dataset/curated/block_dependency/EthCapsule.sol",
    "source": "https://github.com/SoftSec-KAIST/Smartian/blob/main/examples/sol/BD_true2.sol",
    "vulnerabilities": [{
        "lines": [87],
        "category": "block_dependency"
    },{
        "lines": [70],
        "category": "block_dependency"
    },{
        "lines": [57],
        "category": "block_dependency"
    },{
        "lines": [54],
        "category": "block_dependency"
    }]
}, {
    "name": "random_number_generator.sol",
    "path": "dataset/curated/block_dependency/random_number_generator.sol",
    "source": "https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/weak_randomness/random_number_generator.sol",
    "vulnerabilities": [{
        "lines": [12],
        "category": "block_dependency"
    }, {
        "lines": [18],
        "category": "block_dependency"
    }, {
        "lines": [20],
        "category": "block_dependency"
    }, {
        "lines": [22],
        "category": "block_dependency"
    }]
}, {
    "name": "roulette.sol",
    "path": "dataset/curated/block_dependency/roulette.sol",
    "source": "https://github.com/sigp/solidity-security-blog",
    "vulnerabilities": [{
        "lines": [18],
        "category": "block_dependency"
    }, {
        "lines": [20],
        "category": "block_dependency"
    }]
}, {
    "name": "lottery.sol",
    "path": "dataset/curated/block_dependency/lottery.sol",
    "source": "https://etherscan.io/address/0x80ddae5251047d6ceb29765f38fed1c0013004b7#code",
    "vulnerabilities": [{
        "lines": [38],
        "category": "block_dependency"
    }, {
        "lines": [42],
        "category": "block_dependency"
    }]
}, {
    "name": "lottopollo.sol",
    "path": "dataset/curated/block_dependency/lottopollo.sol",
    "source": "https://github.com/seresistvanandras/EthBench/blob/master/Benchmark/Simple/timestampdependent.sol",
    "vulnerabilities": [{
        "lines": [13],
        "category": "block_dependency"
    }, {
        "lines": [27],
        "category": "block_dependency"
    }]
}, {
    "name": "old_blockhash.sol",
    "path": "dataset/curated/block_dependency/old_blockhash.sol",
    "source": "https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/weak_randomness/old_blockhash.sol",
    "vulnerabilities": [{
        "lines": [35],
        "category": "block_dependency"
    }]
}, {
    "name": "etheraffle.sol",
    "path": "dataset/curated/block_dependency/etheraffle.sol",
    "source": "https://etherscan.io/address/0xcC88937F325d1C6B97da0AFDbb4cA542EFA70870#code",
    "vulnerabilities": [{
        "lines": [49],
        "category": "block_dependency"
    }, {
        "lines": [99],
        "category": "block_dependency"
    }, {
        "lines": [101],
        "category": "block_dependency"
    }, {
        "lines": [103],
        "category": "block_dependency"
    }, {
        "lines": [114],
        "category": "block_dependency"
    }, {
        "lines": [158],
        "category": "block_dependency"
    }]
}, {
    "name": "governmental_survey.sol",
    "path": "dataset/curated/block_dependency/governmental_survey.sol",
    "source": "http://blockchain.unica.it/projects/ethereum-survey/attacks.html#governmental",
    "vulnerabilities": [{
        "lines": [31],
        "category": "block_dependency"
    }]
}, {
    "name": "blackjack.sol",
    "path": "dataset/curated/block_dependency/blackjack.sol",
    "source": "https://etherscan.io/address/0xa65d59708838581520511d98fb8b5d1f76a96cad#code",
    "vulnerabilities": [{
        "lines": [17],
        "category": "block_dependency"
    }, {
        "lines": [19],
        "category": "block_dependency"
    }, {
        "lines": [21],
        "category": "block_dependency"
    }]
}, {
    "name": "lucky_doubler.sol",
    "path": "dataset/curated/block_dependency/lucky_doubler.sol",
    "source": "https://etherscan.io/address/0xF767fCA8e65d03fE16D4e38810f5E5376c3372A8#code",
    "vulnerabilities": [{
        "lines": [127, 128, 129, 130],
        "category": "block_dependency"
    }, {
        "lines": [132],
        "category": "block_dependency"
    }]
}, {
    "name": "timed_crowdsale.sol",
    "path": "dataset/curated/block_dependency/timed_crowdsale.sol",
    "source": "https://github.com/SmartContractSecurity/SWC-registry/blob/master/test_cases/timestamp_dependence/timed_crowdsale.sol",
    "vulnerabilities": [{
        "lines": [13],
        "category": "block_dependency"
    }]
}, {
    "name": "smart_billions.sol",
    "path": "dataset/curated/block_dependency/smart_billions.sol",
    "source": "https://etherscan.io/address/0x5ace17f87c7391e5792a7683069a8025b83bbd85#code",
    "vulnerabilities": [{
        "lines": [523],
        "category": "block_dependency"
    }, {
        "lines": [560],
        "category": "block_dependency"
    }, {
        "lines": [700],
        "category": "block_dependency"
    }, {
        "lines": [702],
        "category": "block_dependency"
    }, {
        "lines": [704],
        "category": "block_dependency"
    }, {
        "lines": [706],
        "category": "block_dependency"
    }, {
        "lines": [708],
        "category": "block_dependency"
    }, {
        "lines": [710],
        "category": "block_dependency"
    }, {
        "lines": [712],
        "category": "block_dependency"
    }, {
        "lines": [714],
        "category": "block_dependency"
    }, {
        "lines": [716],
        "category": "block_dependency"
    }, {
        "lines": [718],
        "category": "block_dependency"
    }]
}, {
    "name": "guess_the_random_number.sol",
    "path": "dataset/curated/block_dependency/guess_the_random_number.sol",
    "source": "https://capturetheether.com/challenges/lotteries/guess-the-random-number/",
    "vulnerabilities": [{
        "lines": [15],
        "category": "block_dependency"
    }]
}, {
    "name": "Router.sol",
    "path": "dataset/curated/unsafe_delegatecall/Router.sol",
    "source": "https://raw.githubusercontent.com/SoftSec-KAIST/Smartian/main/examples/sol/CH_true1.sol",
    "vulnerabilities": [{
        "lines": [24],
        "category": "unsafe_delegatecall"
    }]
},  {
    "name": "proxy.sol",
    "path": "dataset/curated/unsafe_delegatecall/proxy.sol",
    "source": "https://smartcontractsecurity.github.io/SWC-registry/docs/SWC-112#proxysol",
    "description": "Simple proxy pattern with delegatecall",
    "vulnerabilities": [{
        "lines": [12],
        "category": "unsafe_delegatecall"
    }]
}, {
    "name": "Lockdrop.sol",
    "path": "dataset/curated/locking_ether/Lockdrop.sol",
    "source": "https://swcregistry.io/docs/SWC-132#lockdropsol",
    "description": "Gridlock bug in Edgeware's Lockdrop smart contract",
    "vulnerabilities": [{
        "lines": [69],
        "category": "locking_ether"
    }]
}, {
    "name": "Bitway.sol",
    "path": "dataset/curated/locking_ether/Bitway.sol",
    "source": "",
    "vulnerabilities": [{
        "lines": [49],
        "category": "locking_ether"
    }]
}, {
    "name": "EliteCoin.sol",
    "path": "dataset/curated/locking_ether/EliteCoin.sol",
    "source": "",
    "vulnerabilities": [{
        "lines": [157],
        "category": "locking_ether"
    }]
}, {
    "name": "EscrowMyEtherEntityDB.sol",
    "path": "dataset/curated/locking_ether/EscrowMyEtherEntityDB.sol",
    "source": "",
    "vulnerabilities": [{
        "lines": [6],
        "category": "locking_ether"
    }]
}, {
    "name": "IWCEToken.sol",
    "path": "dataset/curated/locking_ether/IWCEToken.sol",
    "source": "",
    "vulnerabilities": [{
        "lines": [31],
        "category": "locking_ether"
    }]
}, {
    "name": "SwarmRedistribution.sol",
    "path": "dataset/curated/locking_ether/SwarmRedistribution.sol",
    "source": "",
    "vulnerabilities": [{
        "lines": [37],
        "category": "locking_ether"
    }]
}, {
    "name": "Luck.sol",
    "path": "dataset/curated/locking_ether/Luck.sol",
    "source": "https://github.com/SoftSec-KAIST/Smartian/blob/main/examples/sol/FE.sol",
    "vulnerabilities": [{
        "lines": [16],
        "category": "locking_ether"
    }]
}, {
    "name": "AssertionFailure.sol",
    "path": "dataset/curated/assertion_failure/AssertionFailure.sol",
    "source": "https://github.com/SoftSec-KAIST/Smartian/blob/main/examples/sol/AF.sol",
    "vulnerabilities": [{
        "lines": [13],
        "category": "assertion_failure"
    }]
}, {
    "name": "simpledschief.sol",
    "path": "dataset/curated/assertion_failure/simpledschief.sol",
    "source": "https://swcregistry.io/docs/SWC-110#simpledschiefsol",
    "description": "Simplified version of the MakerDAO DSChief contract with invariant",
    "vulnerabilities": [{
        "lines": [70],
        "category": "assertion_failure"
    }]
}, {
    "name": "motiv.sol",
    "path": "dataset/curated/assertion_failure/motiv.sol",
    "source": "https://github.com/SoftSec-KAIST/Smartian/blob/main/examples/sol/motiv.sol",
    "vulnerabilities": [{
        "lines": [28],
        "category": "assertion_failure"
    }]
}, {
    "name": "return_memory.sol",
    "path": "dataset/curated/assertion_failure/return_memory.sol",
    "source": "https://swcregistry.io/docs/SWC-110#return_memorysol",
    "description": "Simplified version of Zeppelin's DSChief invariant",
    "vulnerabilities": [{
        "lines": [36],
        "category": "assertion_failure"
    }]
}, {
    "name": "constructor_create.sol",
    "path": "dataset/curated/assertion_failure/constructor_create.sol",
    "source": "https://swcregistry.io/docs/SWC-110#constructor_createsol",
    "description": "Assert violation after call to concretely created contract",
    "vulnerabilities": [{
        "lines": [12],
        "category": "assertion_failure"
    }]
}, {
    "name": "assert_minimal.sol",
    "path": "dataset/curated/assertion_failure/assert_minimal.sol",
    "source": "https://swcregistry.io/docs/SWC-110#assert_minimalsol",
    "description": "Simple assert violation",
    "vulnerabilities": [{
        "lines": [10],
        "category": "assertion_failure"
    }]
}, {
    "name": "token-with-backdoor.sol",
    "path": "dataset/curated/assertion_failure/token-with-backdoor.sol",
    "source": "https://swcregistry.io/docs/SWC-110#token-with-backdoorsol",
    "description": "Assertion can be violated with 3 transactions",
    "vulnerabilities": [{
        "lines": [28],
        "category": "assertion_failure"
    }]
}, {
    "name": "out-of-bounds-exception.sol",
    "path": "dataset/curated/assertion_failure/out-of-bounds-exception.sol",
    "source": "https://swcregistry.io/docs/SWC-110#out-of-bounds-exceptionsol",
    "description": "Exceptions triggered by out-of-bounds array (not an explicit assert violation).",
    "vulnerabilities": [{
        "lines": [8],
        "category": "assertion_failure"
    }]
}, {
    "name": "gas_model.sol",
    "path": "dataset/curated/assertion_failure/gas_model.sol",
    "source": "https://swcregistry.io/docs/SWC-110#gas_modelsol",
    "description": "Gas modeling check",
    "vulnerabilities": [{
        "lines": [13],
        "category": "assertion_failure"
    }]
}, {
    "name": "assert_constructor.sol",
    "path": "dataset/curated/assertion_failure/assert_constructor.sol",
    "source": "https://swcregistry.io/docs/SWC-110#assert_constructorsol",
    "description": "Assert violation in constructor",
    "vulnerabilities": [{
        "lines": [10],
        "category": "assertion_failure"
    }]
}, {
    "name": "constructor_create_modifiable.sol",
    "path": "dataset/curated/assertion_failure/constructor_create_modifiable.sol",
    "source": "https://swcregistry.io/docs/SWC-110#constructor_create_modifiablesol",
    "description": "Assert violation after call to concretely created contract that can be modified",
    "vulnerabilities": [{
        "lines": [15],
        "category": "assertion_failure"
    }]
}, {
    "name": "runtime_user_input_call.sol",
    "path": "dataset/curated/assertion_failure/runtime_user_input_call.sol",
    "source": "https://swcregistry.io/docs/SWC-110#runtime_user_input_callsol",
    "description": "Assert violation after call to user input contract",
    "vulnerabilities": [{
        "lines": [10],
        "category": "assertion_failure"
    }]
}, {
    "name": "runtime_create_user_input.sol",
    "path": "dataset/curated/assertion_failure/runtime_create_user_input.sol",
    "source": "https://swcregistry.io/docs/SWC-110#runtime_create_user_inputsol",
    "description": "Assert violation after call to contract created with user input during runtime",
    "vulnerabilities": [{
        "lines": [11],
        "category": "assertion_failure"
    }]
}, {
    "name": "sha_of_sha_collision.sol",
    "path": "dataset/curated/assertion_failure/sha_of_sha_collision.sol",
    "source": "https://swcregistry.io/docs/SWC-110#sha_of_sha_collisionsol",
    "description": "Check for collision in maps that use SHA hashes as keys",
    "vulnerabilities": [{
        "lines": [18],
        "category": "assertion_failure"
    }]
}, {
    "name": "assert_multitx_2.sol",
    "path": "dataset/curated/assertion_failure/assert_multitx_2.sol",
    "source": "https://swcregistry.io/docs/SWC-110#assert_multitx_2sol",
    "description": "Assert can be triggered with 2 transactions",
    "vulnerabilities": [{
        "lines": [16],
        "category": "assertion_failure"
    }]
}, {
    "name": "constructor_create_argument.sol",
    "path": "dataset/curated/assertion_failure/constructor_create_argument.sol",
    "source": "https://swcregistry.io/docs/SWC-110#constructor_create_argumentsol",
    "description": "Assert violation after call to concretely created contract with argument",
    "vulnerabilities": [{
        "lines": [11],
        "category": "assertion_failure"
    }]
}]